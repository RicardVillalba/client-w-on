{"ast":null,"code":"var _jsxFileName = \"/Users/code/Documents/Ironhack/M-3/week2/react-auth-client-may-2020/src/lib/Auth.js\";\nimport React from 'react';\nimport axios from 'axios';\nconst {\n  Consumer,\n  Provider\n} = React.createContext(); // HOC\n\nfunction withAuth(WrappedComponent) {\n  return function (props) {\n    return /*#__PURE__*/React.createElement(Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, valueFromProvider => /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {\n      user: valueFromProvider.user,\n      isLoggedIn: valueFromProvider.isLoggedIn,\n      isLoading: valueFromProvider.isLoading,\n      login: valueFromProvider.login,\n      signup: valueFromProvider.signup,\n      logout: valueFromProvider.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })));\n  };\n}\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      isLoggedIn: false,\n      isLoading: true\n    };\n\n    this.login = (username, password) => {\n      axios.post('http://localhost:5000/auth/login', {\n        username,\n        password\n      }, {\n        withCredentials: true\n      }).then(response => {\n        const user = response.data;\n        this.setState({\n          isLoggedIn: true,\n          isLoading: false,\n          user\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.signup = (username, password) => {\n      axios.post('http://localhost:5000/auth/signup', {\n        username,\n        password\n      }, {\n        withCredentials: true\n      }).then(response => {\n        const user = response.data;\n        this.setState({\n          isLoggedIn: true,\n          isLoading: false,\n          user\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.logout = () => {\n      axios.get('http://localhost:5000/auth/logout', {\n        withCredentials: true\n      }).then(response => {\n        this.setState({\n          isLoggedIn: false,\n          isLoading: false,\n          user: null\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // When app and AuthProvider load for the first time\n    // make a call to the server '/me' and check if user is authenitcated\n    axios.get('http://localhost:5000/auth/me', {\n      withCredentials: true\n    }).then(response => {\n      const user = response.data;\n      this.setState({\n        isLoggedIn: true,\n        isLoading: false,\n        user\n      });\n    }).catch(err => this.setState({\n      isLoggedIn: false,\n      isLoading: false,\n      user: null\n    }));\n  }\n\n  render() {\n    const {\n      user,\n      isLoggedIn,\n      isLoading\n    } = this.state;\n    const {\n      login,\n      signup,\n      logout\n    } = this;\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        user,\n        isLoggedIn,\n        isLoading,\n        login,\n        signup,\n        logout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { withAuth, AuthProvider };","map":{"version":3,"sources":["/Users/code/Documents/Ironhack/M-3/week2/react-auth-client-may-2020/src/lib/Auth.js"],"names":["React","axios","Consumer","Provider","createContext","withAuth","WrappedComponent","props","valueFromProvider","user","isLoggedIn","isLoading","login","signup","logout","AuthProvider","Component","state","username","password","post","withCredentials","then","response","data","setState","catch","err","console","log","get","componentDidMount","render","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst { Consumer, Provider } = React.createContext();\n\n\n\n// HOC\nfunction withAuth(WrappedComponent) {\n\n  return function (props) {\n    return (\n      <Consumer>\n        {(valueFromProvider) => (\n          <WrappedComponent\n            {...props}\n            user={valueFromProvider.user}\n            isLoggedIn={valueFromProvider.isLoggedIn}\n            isLoading={valueFromProvider.isLoading}\n            login={valueFromProvider.login}\n            signup={valueFromProvider.signup}\n            logout={valueFromProvider.logout}\n          />\n        )}\n      </Consumer>\n    )\n  }\n}\n\nclass AuthProvider extends React.Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true\n  }\n\n  componentDidMount() {\n    // When app and AuthProvider load for the first time\n    // make a call to the server '/me' and check if user is authenitcated\n    axios.get('http://localhost:5000/auth/me', { withCredentials: true })\n      .then((response) => {\n        const user = response.data;\n        this.setState({ isLoggedIn: true, isLoading: false, user });\n      })\n      .catch((err) => this.setState({ isLoggedIn: false, isLoading: false, user: null }));\n  }\n\n  login = (username, password) => {\n    axios.post('http://localhost:5000/auth/login', { username, password }, { withCredentials: true })\n      .then((response) => {\n        const user = response.data;\n        this.setState({ isLoggedIn: true, isLoading: false, user });\n      })\n      .catch((err) => console.log(err));\n  }\n  signup = (username, password) => {\n    axios.post('http://localhost:5000/auth/signup', { username, password }, { withCredentials: true })\n      .then((response) => {\n        const user = response.data;\n        this.setState({ isLoggedIn: true, isLoading: false, user });\n      })\n      .catch((err) => console.log(err));\n  }\n  logout = () => {\n    axios.get('http://localhost:5000/auth/logout', { withCredentials: true })\n      .then((response) => {\n        this.setState({ isLoggedIn: false, isLoading: false, user: null });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { user, isLoggedIn, isLoading } = this.state;\n    const { login, signup, logout } = this;\n\n    return (\n      <Provider value={{ user, isLoggedIn, isLoading, login, signup, logout }}>\n        {this.props.children}\n      </Provider>\n    )\n  }\n}\n\nexport { withAuth, AuthProvider }"]},"metadata":{},"sourceType":"module"}